{"version":3,"sources":["assets/img/avatar.svg","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","hocs/withAutRedirect.js","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileDataForm.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","css","post","width","height","src","logo","alt","id","message","post_nav","likeCounts","maxLength10","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","requiredField","component","Textarea","name","placeholder","addpost_text_area","MyPosts","postsDataMap","posts","map","vals","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","onChange","e","currentTarget","onBlur","updateStatus","type","ProfileDataFormReduxForm","deactivateEditMode","error","Input","Object","keys","profile","contacts","key","ProfileData","isOwner","activateEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","contact_list","ProfileInfo","user_photo","photos","large","userPhoto","initialValues","formData","saveProfile","then","console","log","target","files","savePhoto","Profile","store","Preloader","ProfileContainer","userId","match","params","autherisedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.8e8b2c4e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar.acbde035.svg\";","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_photo\":\"Profile_user_photo__3pZqo\",\"contact_list\":\"Profile_contact_list__13hIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addpost_text_area\":\"MyPosts_addpost_text_area__1uQk-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__26lwK\",\"post_nav\":\"Post_post_nav__22phG\"};","import logo from '../../../../../src/assets/img/avatar.svg';\r\nimport css from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n        <div className={css.post}>\r\n            <div className=\"avatar\">\r\n                <img width=\"80\" height=\"80\" src={logo} alt=\"\" />\r\n            </div>\r\n            <div>post {props.id}</div>\r\n            <div>{props.message}</div>\r\n            <div className={css.post_nav}></div>\r\n            <div><button>like {props.likeCounts}</button></div>\r\n            <div><button>dislike</button></div>\r\n            \r\n            \r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, requiredField } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport css from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = (props) => {\r\n  let postsDataMap = props.posts.map(post => <Post key={post.id} likeCounts={post.likeCounts} message={post.message} to={post.message} id={post.id}/>)\r\n  let addPost = (vals) => {\r\n    props.addPost(vals.newPostText);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <h3>MyPosts</h3>\r\n        <AddNewPostReduxForm onSubmit={addPost}/>\r\n      <div className=\"posts_list\">\r\n        {postsDataMap}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field validate={[requiredField, maxLength10]} component={Textarea} name={'newPostText'} placeholder={'enter your message'} className={css.addpost_text_area}/>\r\n      </div>\r\n      <div><button>Add post</button></div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\r\n\r\n  \r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n  \r\nexport default MyPostsContainer;","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus]     = useState(props.status);\r\n  \r\n    useEffect(() => setStatus(props.status), [props.status])\r\n  \r\n    const activateEditMode = () => setEditMode(true)\r\n  \r\n    const deactivateEditMode = () => {\r\n      setEditMode(false);\r\n      props.updateStatus(status);\r\n    }\r\n    \r\n    const onStatusChange = (e) => setStatus(e.currentTarget.value)\r\n    \r\n      return (\r\n        <div>\r\n          {!editMode &&\r\n          <div onClick={activateEditMode}>{props.status || \"Добавить статус\"}</div>\r\n          }\r\n          {editMode &&\r\n            <input onChange={onStatusChange} onBlur={deactivateEditMode} value={status} type=\"text\" />\r\n          }\r\n        </div>\r\n      )\r\n  }\r\n\r\nexport default ProfileStatus;","import { reduxForm } from \"redux-form\";\r\nimport { Field } from \"redux-form\"\r\nimport { maxLengthCreator, requiredField } from \"../../utils/validators/validators\";\r\nimport { Input, Textarea } from \"../common/FormsControls/FormsControls\"\r\nimport css from './Profile.module.css';\r\n\r\nconst ProfileDataForm = ({handleSubmit, ...props}) => {\r\n    return (<>\r\n        <button onClick={props.deactivateEditMode}>&larr; return</button>\r\n        <form onSubmit={handleSubmit}>\r\n            <button>save</button>\r\n\r\n            {props.error && <div>{props.error}</div>}\r\n\r\n            <div><b>Full name:</b>\r\n                <Field component={Input} name={'fullName'} type=\"text\" placeholder=\"Full name\"/>\r\n            </div>\r\n            \r\n            <div><b>Looking for a job:</b> \r\n                <Field component={'input'} name={'lookingForAJob'} type=\"checkbox\"/>\r\n            </div>\r\n            <div\r\n                ><b>My proffesional skills:</b> \r\n                <Field component={Textarea} name={'lookingForAJobDescription'} placeholder=\"lookingForAJobDescription\"/>\r\n            </div>\r\n            <div>\r\n                <b>About me:</b>\r\n                <Field component={Textarea} name={'aboutMe'} placeholder={'enter your message'} className={css.addpost_text_area}/>\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b>\r\n             {Object.keys(props.profile.contacts).map(key =>\r\n                <div key={key}><b>{key}: </b> \r\n                    <Field component={'input'} name={`contacts.${key}`} type=\"text\" placeholder={key}/>\r\n                </div>)}\r\n            </div>\r\n        </form>\r\n        </>\r\n    )\r\n  }\r\n\r\n  const ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, { useState } from 'react';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport css from './Profile.module.css';\r\nimport userPhoto from '../../assets/img/avatar.svg'\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\nimport ProfileDataFormReduxForm from './ProfileDataForm';\r\n\r\nconst ProfileData = (props) => {\r\n  return (\r\n    <>\r\n    {props.isOwner && <button onClick={props.activateEditMode}>edit</button>}\r\n    <div><b>Full name:</b> {props.profile.fullName}</div>\r\n      \r\n    <div><b>Looking for a job:</b> {props.profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n    <div><b>My proffesional skills:</b> {props.profile.lookingForAJobDescription}</div>\r\n    <div><b>About me:</b> {props.profile.aboutMe}</div>\r\n    <div><b>Contacts:</b> {Object.keys(props.profile.contacts).map(key => \r\n    <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]} />)}</div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n  return <div className={css.contact_list}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nconst ProfileInfo = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  const omMainPhotoSelected = (e) => {\r\n    e.target.files.length && props.savePhoto(e.target.files[0])\r\n  }\r\n  \r\n  const onSubmit = (formData) => {\r\n    props.saveProfile(formData).then(() => {\r\n      setEditMode(false)\r\n    })\r\n    console.log(formData)\r\n  }\r\n  return (\r\n    <>\r\n      <img className={css.user_photo} src={props.profile.photos.large || userPhoto} alt=\"\" />\r\n      {editMode ?\r\n      <ProfileDataFormReduxForm profile={props.profile} initialValues={props.profile} onSubmit={onSubmit} deactivateEditMode={() => {setEditMode(false)}}/> :\r\n      <ProfileData activateEditMode={() => {setEditMode(true)}} isOwner={props.isOwner} profile={props.profile}/>\r\n      }      \r\n      {props.isOwner && <input type={\"file\"} onChange={omMainPhotoSelected}/>}\r\n      <div><b>Status:</b> <ProfileStatus status={props.status} updateStatus={props.updateStatus}/></div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Profile = (props) => {\r\n  if(!props.profile){\r\n    return <Preloader/>\r\n  }\r\n    return (\r\n      <>\r\n      <ProfileInfo  \r\n      saveProfile={props.saveProfile}\r\n      status={props.status} \r\n      updateStatus={props.updateStatus}\r\n      savePhoto={props.savePhoto}\r\n      isOwner={props.isOwner}\r\n      profile={props.profile}/>\r\n      \r\n      <MyPostsContainer store={props.store}/>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport Profile from \"./Profile\";\r\nimport { getUserProfile, updateStatus, getStatus, savePhoto, saveProfile } from './../../redux/profile-reducer';\r\nimport { withAuthRedirect } from \"../../hocs/withAutRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile(){\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId){\r\n            userId = this.props.autherisedUserId\r\n            // this.props.history.push(\"/login\");\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId != prevProps.match.params.userId){this.refreshProfile()}\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Profile \r\n            isOwner={!this.props.match.params.userId}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n            savePhoto={this.savePhoto}\r\n            saveProfile={this.props.saveProfile}\r\n            {...this.props}/>\r\n        )\r\n    }  \r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autherisedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {savePhoto, getUserProfile, getStatus, updateStatus, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}