{"version":3,"sources":["redux/dialogs-reducer.js","api/api.js","utils/objects-helper.js","redux/users-reducer.js","App.module.css","components/Aside/Aside.module.css","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Aside/Aside.jsx","components/Login/Login.jsx","assets/img/logo.svg","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","hocs/withSuspense.js","App.jsx","index.js","components/common/FormsControls/FormsControls.jsx","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","assets/img/preloader.gif","components/common/Preloader/Preloader.jsx","redux/profile-reducer.js"],"names":["SEND_MESSAGE","initialState","dialogsData","id","to","name","messagesData","messageText","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","messageBody","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","profileAPI","getProfile","getStatus","updateProfile","status","put","savePhoto","photo","formData","FormData","append","saveProfile","profile","authAPI","authMe","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_IN_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowinInProgress","dispatch","a","totalCount","followUnfollowFlow","apiMethod","ac","resultCode","bind","usersReducer","followed","filter","module","exports","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","isAuth","captchaUrl","authReducer","payload","setAuthUserData","getcaptchaUrlSuccess","getAuthUserData","url","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","usersPage","auth","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","_store","Aside","className","css","nav_block","activeClassName","nav_block_active","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","Field","validate","requiredField","component","Input","placeholder","htmlFor","src","connect","message","messages","length","stopSubmit","_error","Header","props","logo","alt","onClick","HeaderContainer","this","React","Component","withSuspense","fallback","Preloader","DialogsContainer","lazy","ProfileContainer","UsersContainer","App","catchAllUnhadledErrors","reason","promise","alert","initializeApp","addEventListener","removeEventListener","content","exact","path","render","Login","AppConteiner","withRouter","Promise","all","AppWrap","ReactDOM","document","getElementById","Textarea","input","meta","touched","hasError","formControl","value","maxLengthCreator","maxLength","preloader","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","likeCounts","addPostActionCreator","newPostText","setStatus","getUserProfile","updateStatus","file","photos","getState","reject","p","postId"],"mappings":"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","file":"static/js/main.167eb00b.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {id:\"1\", to:\"/taras\", name: \"Taras\"},\r\n        {id:\"2\", to:\"/sania\", name: \"Sania\"},\r\n        {id:\"3\", to:\"/vasiania\", name: \"Vasiania\"},\r\n        {id:\"4\", to:\"/tania\", name: \"Tania\"},\r\n        {id:\"5\", to:\"/rita\", name: \"Rita\"}\r\n    ],\r\n    messagesData: [\r\n        {id: 1, messageText: \"Привет как дела\"},\r\n        {id: 2, messageText: \"Как твое It\"},\r\n        {id: 3, messageText: \"Еще не ахти?\"}\r\n    ]\r\n}\r\n\r\nexport const dialogsReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case SEND_MESSAGE:\r\n            let messageBody = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                newMessageBody: \"\",\r\n                messagesData: [...state.messagesData, {id: 6, messageText: messageBody}],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => {return {type: SEND_MESSAGE, newMessageBody}}\r\n\r\nexport default dialogsReducer;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"4c0190ce-47fb-4f9a-bd45-f9d2b960ef3c\"\r\n    }\r\n\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers: (currentPage = 1, pageSize = 10) => {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n            return response.data;\r\n        })\r\n    },\r\n    follow(userId){\r\n        return instance.post(`follow/${userId}`, {withCredentials: true})\r\n    },\r\n    unfollow(userId){\r\n        return instance.delete(`follow/${userId}`, {withCredentials: true})\r\n    }\r\n    //console.warn()\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId){\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateProfile(status){\r\n        return instance.put(`profile/status`, {status})\r\n    },\r\n    savePhoto(photo){\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photo)\r\n        return instance.put(`profile/photo`, formData, {headers: {'Content-Type': 'multipart/form-data'}})\r\n    },\r\n    saveProfile(profile){\r\n        return instance.put(`profile`, profile)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe: () => {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe=false, captcha = null){\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl: () => {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    \r\n    return items.map(u=>{\r\n        if(u[objPropName] === itemId){\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/objects-helper\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = 'TOGGLE_FOLLOWING_IN_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n            case SET_USERS:{\r\n                return {...state, users: action.users}\r\n            }\r\n            case SET_CURRENT_PAGE:{\r\n                return {...state, currentPage: action.currentPage}\r\n            }\r\n            case SET_TOTAL_USERS_COUNT:{\r\n                return {...state, totalUsersCount: action.totalCount}\r\n            }\r\n            case TOGGLE_IS_FETCHING:{\r\n                return {...state, isFetching: action.isFetching}\r\n            }\r\n            case TOGGLE_FOLLOWING_IN_PROGRESS:{\r\n                return {...state, followingInProgress: action.isFetching ?\r\n                    [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id =>  id != action.userId)}\r\n            }\r\n        default:\r\n            return state;\r\n        }\r\n}\r\n\r\n//action-creators AC\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowinInProgress = (isFetching, userId) => ({type: TOGGLE_FOLLOWING_IN_PROGRESS, isFetching, userId})\r\n\r\n//ThunkCreator\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, ac) => {\r\n    dispatch(toggleFollowinInProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode == 0){\r\n      dispatch(ac(userId))\r\n    };\r\n    dispatch(toggleFollowinInProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__2HqPL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_block\":\"Aside_nav_block__j1osU\",\"nav_block_active\":\"Aside_nav_block_active__dGs8f\",\"hr\":\"Aside_hr__25PzA\"};","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI, securityAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null // if null, then captcha is not required\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n        }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}})\r\nexport const getcaptchaUrlSuccess = (captchaUrl) => ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.authMe()\r\n    if(response.data.resultCode === 0){\r\n      let {id, email, login} = response.data.data;\r\n      dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha)\r\n    if(response.data.resultCode === 0){\r\n        dispatch(getAuthUserData());\r\n    }else{\r\n        if(response.data.resultCode === 10){\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getcaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if(response.data.resultCode === 0){\r\n       dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default authReducer;","import { getAuthUserData } from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n        }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    // dispatch(somethingElse())\r\n    // dispatch(somethingElse())\r\n    Promise.all([promise]).then(()=>{dispatch(initializedSuccess())})\r\n    // promise.then(dispatch(initializedSuccess()))\r\n}\r\n\r\n\r\nexport default appReducer;","import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\r\nimport { authReducer } from \"./auth-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport { appReducer } from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow._store = store;\r\nexport default store;","import { NavLink } from 'react-router-dom';\r\nimport css from './Aside.module.css';\r\n\r\nconst Aside = () => {\r\n  return (\r\n    <aside>\r\n      <nav>\r\n        <NavLink className={css.nav_block} to=\"/Profile\" activeClassName={css.nav_block_active}>Profile</NavLink>\r\n        <NavLink className={css.nav_block} to=\"/Dialogs\"  activeClassName={css.nav_block_active}>Dialogs</NavLink>\r\n        <NavLink className={css.nav_block} to=\"/Users\" activeClassName={css.nav_block_active}>Users</NavLink>\r\n        <div className=\"hr\"></div>\r\n        <NavLink className={css.nav_block} to=\"Settings\" activeClassName={css.nav_block_active}>Settings</NavLink>\r\n      </nav>\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default Aside;","import { React } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { propTypes } from 'redux-form';\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { requiredField } from '../../utils/validators/validators';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport { login } from './../../redux/auth-reducer';\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n            <Field validate={[requiredField]} component={Input} name={'email'} type=\"text\" placeholder=\"Email\"/>\r\n            <Field validate={[requiredField]} component={Input} name={'password'} type=\"text\" placeholder=\"Password\"/>\r\n            <Field component={Input} name={'rememberMe'} type=\"checkbox\" placeholder=\"\"/><label htmlFor=\"\">remember me</label>\r\n            {captchaUrl && <Field validate={[requiredField]} component={Input} name={'captcha'} type=\"text\" placeholder=\"captcha\"/>}\r\n            {captchaUrl && <img src={captchaUrl}/>}\r\n            {error && <div>{error}</div>}\r\n            <button>Login</button>\r\n        </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = ({login, isAuth, captchaUrl}) => {\r\n    const onSubmit = (formData) => {\r\n        login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if(isAuth){\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm captchaUrl={captchaUrl} onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl, \r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","export default __webpack_public_path__ + \"static/media/logo.0a3e94f5.svg\";","import { NavLink } from 'react-router-dom';\r\nimport logo from '../../assets/img/logo.svg';\r\nimport css from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n      <header>\r\n        <div className=\"wrap\">\r\n          <div className=\"logo\">\r\n            <img src={logo} alt=\"\" />\r\n          </div>\r\n          <div className=\"lgn_block\">\r\n            {props.isAuth ?\r\n              <div>{props.login + \" \"} <button onClick={props.logout}>logout</button></div> :\r\n              <NavLink to={'/login'}>Login</NavLink>}\r\n          </div>\r\n        </div>\r\n      </header>\r\n  );\r\n}\r\n  \r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { logout } from './../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render(){\r\n    return <Header {...this.props} />\r\n  }\r\n}\r\n  \r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React, { Component, Suspense } from 'react';\r\nimport Preloader from '../components/common/Preloader/Preloader';\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader/>}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    }\r\n}","import React, { Suspense } from 'react';\r\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { compose } from 'redux';\r\nimport { initializeApp } from './redux/app-reducer';\r\nimport { Provider, connect } from 'react-redux';\r\nimport store from './redux/redux-store';\r\nimport css from './App.module.css';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport Aside from './components/Aside/Aside';\r\nimport Login from './components/Login/Login';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport { withSuspense } from './hocs/withSuspense';\r\nimport { Switch } from 'react-router-dom';\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\nclass App extends React.Component {\r\n  catchAllUnhadledErrors = (reason, promise) => {\r\n    alert(\"some error occured\")\r\n  }\r\n  componentDidMount(){\r\n    this.props.initializeApp();\r\n    window.addEventListener(\"unhandledrejection\", this.catchAllUnhadledErrors)\r\n  }\r\n  componentWillUnmount(){\r\n    window.removeEventListener(\"unhandledrejection\", this.catchAllUnhadledErrors)\r\n  }\r\n\r\n  render(){\r\n    if(!this.props.initialized){\r\n      return <Preloader/>\r\n    }\r\n\r\n    return (\r\n\r\n      <div className=\"App\">\r\n\r\n        <HeaderContainer/>\r\n\r\n          <main>\r\n            <div className=\"wrap\">\r\n              <Aside/>\r\n              <div className={css.content}>\r\n                <Switch>\r\n                  <Route exact path=\"/\" render={() => {<Redirect to=\"/profile\"/>}}/>\r\n                  <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)}/>\r\n                  <Route path=\"/profile/:userId?\" render={withSuspense(ProfileContainer)}/>\r\n                  <Route path=\"/users\" render={withSuspense(UsersContainer)}/>\r\n                  <Route path=\"/login\" render={withSuspense(Login)}/>\r\n                  <Route path=\"*\" render={() => {<div>404 not found</div>}}/>\r\n                </Switch>\r\n              </div>\r\n            </div>\r\n          </main>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nlet AppConteiner = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp})\r\n  ) (App)\r\n\r\nlet AppWrap = (props) => {\r\n  return <BrowserRouter>\r\n        <Provider store={store}>\r\n            <AppConteiner/>\r\n        </Provider>\r\n  </BrowserRouter>\r\n}\r\n\r\nexport default AppWrap;","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppWrap from './App';\r\n\r\nReactDOM.render(<AppWrap />, document.getElementById('root'));","import css from './FormsControls.module.css'\r\n\r\nexport const Textarea = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={css.formControl + \" \" + (hasError ? css.error : \"\")}>\r\n            <textarea {...input} {...props}></textarea>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\nexport const Input = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={css.formControl + \" \" + (hasError ? css.error : \"\")}>\r\n            <input {...input} {...props}></input>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"FormsControls_form-control__3MZN9\",\"error\":\"FormsControls_error__3KVCs\"};","export const requiredField = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\n\r\n//call inside variable(let, const) outside the validate={} attr\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength}`;\r\n    return undefined;\r\n}","export default __webpack_public_path__ + \"static/media/preloader.9fed7e0b.gif\";","import preloader from '../../../assets/img/preloader.gif'\r\n\r\nconst Preloader = (props) => {\r\n\r\n  return (<img src={preloader}/>\r\n  );\r\n}\r\n\r\nexport default Preloader;","import { stopSubmit } from \"redux-form\";\r\nimport { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    profile: null,\r\n    posts: [\r\n        {id: 1, likeCounts:4, message: \"abracadabraa\"},\r\n        {id: 2, likeCounts:15, message: \"abracadabra\"},\r\n        {id: 3, likeCounts:3, message: \"abracadabr\"},\r\n        {id: 4, likeCounts:11, message: \"abracadab\"}\r\n    ],\r\n    status: ''\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case ADD_POST:{\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id:5, likeCounts: 25, message: action.newPostText}],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n            case SET_STATUS:\r\n                return {\r\n                    ...state,\r\n                    status: action.status\r\n                }\r\n                case DELETE_POST:\r\n                    return {\r\n                        ...state,\r\n                        posts: state.posts.filter(p=>p.id !=  action.postId)\r\n                    }\r\n                    case SAVE_PHOTO_SUCCESS:\r\n                        return {\r\n                            ...state,\r\n                            profile: {...state.profile, photos: action.photos}\r\n                        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    try{\r\n    let response = await profileAPI.updateProfile(status)\r\n    \r\n    if(response.data.resultCode === 0){\r\n        dispatch(setStatus(status));\r\n    }\r\n    }catch(error){debugger}\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n    \r\n    if(response.data.resultCode === 0){\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    const response = await profileAPI.saveProfile(profile)\r\n    if(response.data.resultCode === 0){\r\n        dispatch(getUserProfile(userId));\r\n    }else{\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: message}));\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}