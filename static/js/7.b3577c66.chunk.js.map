{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","pages/Chat/ChatPage.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","Chat","useState","wsChannel","setWsChannel","useEffect","ws","closeHandler","console","log","setTimeout","createChannel","removeEventListener","close","WebSocket","addEventListener","MessageList","AddMessageForm","messagesList","setMessages","messageHendler","e","newMessages","JSON","parse","data","prevMessages","style","height","overflowY","map","m","index","Message","message","width","src","photo","alt","userName","setMessage","readyStatus","setReadyStatus","openHandler","onChange","currentTarget","disabled","onClick","send","ChatPage"],"mappings":"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","file":"static/js/7.b3577c66.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { type } from 'os'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nexport type ChatMessageT = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\n\r\n\r\n\r\nconst ChatPage: React.FC = () => {\r\n    return <div>\r\n        <Chat/>\r\n    </div>\r\n}\r\nconst Chat: React.FC = () => {\r\n    const [wsChannel, setWsChannel] = useState<WebSocket|null>(null)\r\n\r\n    useEffect(()=>{\r\n        let ws:WebSocket\r\n        const closeHandler = () => {\r\n            console.log('CLOSE WS');\r\n            setTimeout(createChannel, 3000)\r\n        }\r\n\r\n        function createChannel(){\r\n            ws?.removeEventListener('close', closeHandler)\r\n            ws?.close()\r\n            ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n            ws.addEventListener('close', closeHandler)\r\n            setWsChannel(ws)\r\n        }\r\n        createChannel()\r\n        \r\n        return () => {\r\n            ws.removeEventListener('close', closeHandler)\r\n            ws.close()\r\n        }\r\n    }, [])\r\n\r\n    return <div>\r\n        <MessageList wsChannel={wsChannel}/>\r\n        <AddMessageForm wsChannel={wsChannel}/>\r\n    </div>\r\n}\r\nconst MessageList: React.FC<{wsChannel: WebSocket|null}> = ({wsChannel}) => {\r\n    const [messagesList, setMessages] = useState<ChatMessageT[]>([])\r\n\r\n    useEffect(()=>{\r\n        let messageHendler = (e:MessageEvent)=>{\r\n            let newMessages = JSON.parse(e.data)\r\n            setMessages((prevMessages) => [...prevMessages, ...newMessages]);\r\n            \r\n        }\r\n        wsChannel?.addEventListener('message', messageHendler)\r\n        return () => {\r\n            wsChannel?.removeEventListener('message', messageHendler)\r\n        }\r\n    }, [wsChannel])\r\n\r\n    return <div style={{height: '200px', overflowY: 'auto'}}>\r\n        {messagesList.map((m, index) => <Message key={index} message={m}/>)}\r\n    </div>\r\n}\r\nconst Message: React.FC<{message: ChatMessageT}> = ({message}) => {\r\n    return <div>\r\n        <img width='50px' src={message.photo} alt=\"\" /><b>{message.userName}</b>\r\n        <br />\r\n        {message.message}\r\n    </div>\r\n}\r\nconst AddMessageForm: React.FC<{wsChannel: WebSocket|null}> = ({wsChannel}) => {\r\n    const [message, setMessage] = useState('')\r\n    const [readyStatus, setReadyStatus] = useState<'pending'|'ready'>('pending')\r\n\r\n    useEffect(() => {\r\n        let openHandler = () => {\r\n            setReadyStatus('ready')\r\n        }\r\n        wsChannel?.addEventListener('open', openHandler)\r\n        return ()=>{\r\n            wsChannel?.removeEventListener('open', openHandler)\r\n        }\r\n    },[wsChannel])\r\n\r\n    const sendMessage = () => {\r\n        if (!message) {\r\n            return\r\n        }\r\n        wsChannel?.send(message)\r\n        setMessage('')\r\n    }\r\n    return <div>\r\n        <textarea onChange={(e)=>setMessage(e.currentTarget.value)} value={message}></textarea>\r\n        <button disabled={wsChannel === null || readyStatus !== \"ready\"} onClick={sendMessage}>Send</button>\r\n    </div>\r\n}\r\n\r\nexport default ChatPage"],"sourceRoot":""}